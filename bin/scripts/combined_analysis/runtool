#!/usr/bin/env perl
use strict;
use warnings;
local $| = 1 ;

# -------------------------------------------------------------
# Prototype runtool for combined analysis (based on T3 runtool)
# -------------------------------------------------------------

my $MYHOME = "." ;
my $JAVA = "java" ;

# --------------------------------------------------------
# Some help-functions first ...
# --------------------------------------------------------

sub BENCHMARKtoken {
   my $token = readline(*STDIN) ; chomp $token ;
   if ($token ne "BENCHMARK") { 
      print STDERR "ERROR: expecting BENCHMARK token" ;
      exit 0 ;
   }
}

sub readPath {
  my $t = <STDIN> ; chomp $t ; return $t ;
}
 
sub readNum {
  my $N = <STDIN> ; chomp $N ;
  return 0 + $N ;
} 
  
sub readContextClassPaths {
  my $N = $_[0] ;
  my $paths = "." ;
  my $k ;
  for ($k=0; $k<$N; $k++) {
     my $p = <STDIN> ;
     chomp $p ;
     $paths = $paths . ":" ;
     $paths = $paths . $p ;
  }
  return $paths ;
}
 
sub announcePathToTestingTool {
   print "CLASSPATH\n" ;
   print "0\n" ;
   print ("READY\n") ;
}

# run tool n-times, for each of n CUTs
sub runLoop {
   my $N      = $_[0] ;
   my $CUTsrcdir = $_[1] ;
   my $CUTbindir = $_[2] ;
   my $contextClassPaths = $_[3] ;
   
   my $k ;
   for ($k=0; $k<$N; $k++) {
      my $timebudget = readNum ;
      my $CUT = <STDIN> ; chomp $CUT ;
      print ("READY\n") ;
   }
}

# --------------------------------------------------------
# Here begins the protocol
# --------------------------------------------------------
 
BENCHMARKtoken() ;
my $src = readPath() ;
# print STDERR ("[debug:] src = " . $src) ;
my $bin = readPath();
my $numOfContextClassPaths  = readNum() ;
my $contextClassPaths = readContextClassPaths($numOfContextClassPaths) ;
my $numOfTargetClasses = readNum() ;
announcePathToTestingTool() ;
# Now the protocol is going to pass N x CUTs;
runLoop($numOfTargetClasses,$src,$bin,$contextClassPaths) ;
# DONE.
